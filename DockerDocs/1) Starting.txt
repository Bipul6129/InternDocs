Docker

Container
	A container is a sandboxed process running on a host machine that is isolated from all other processes running on that host machine.

	Is a runnable instance of an image. You can create, start, stop, move, or delete a container using the Docker API or CLI.

	Starting a Container
		- docker run -dp 127.0.0.1:3000:3000 img-name

	List Containers
		- docker ps
		- docker ps -a (means show all container)

	Stopping Container
		- docker stop container-id

	Build updated Container
		- docker build -t container-name

	Remove Container
		- docker rm container-id

	Starting a Container with interactive mode
		- docker run -it --mount "type=bind, src=%cd%, target=/src" ubuntu bash

	


Image
	A running container uses an isolated filesystem. This isolated filesystem is provided by an image, and the image must contain everything needed to run an application - all dependencies, configurations, scripts, binaries, etc. 

	Building the app's image
		- create a Dockerfile on directory
		- add contents inside dockerfile
		- docker build -t name-image .


Volumes
	Volumes provide the ability to connect specific filesystem paths of the container back to the host machine. 
	If you mount a directory in the container, changes in that directory are also seen on the host machine.
	If you mount that same directory across container restarts, you'd see the same files.

	Creating Volume
		- docker volume create vol-name

	Running container with volume
		- docker run -dp 127.0.0.1:3000:3000 --mount type=volume,src=vol-name,target=/etc/todos getting-started


Container Networking
	If you place the two containers on the same network, they can talk to each other.

	Creating Network
		- docker network create net-name

	Starting mysqlcontainer and attach it to network
		docker run -d ^
		    --network todo-app --network-alias mysql ^
		    -v todo-mysql-data:/var/lib/mysql ^
		    -e MYSQL_ROOT_PASSWORD=secret ^
		    -e MYSQL_DATABASE=todos ^
		    mysql:8.0

	nicolaka/netshoot
		- docker run -it --network net-name nicolaka/netshoot
		- dig mysql
		